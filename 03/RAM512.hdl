// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    RAM64(in=in,load=ram0Andload,out=out0,address=address[0..5]);
    RAM64(in=in,load=ram1Andload,out=out1,address=address[0..5]);
    RAM64(in=in,load=ram2Andload,out=out2,address=address[0..5]);
    RAM64(in=in,load=ram3Andload,out=out3,address=address[0..5]);
    RAM64(in=in,load=ram4Andload,out=out4,address=address[0..5]);
    RAM64(in=in,load=ram5Andload,out=out5,address=address[0..5]);
    RAM64(in=in,load=ram6Andload,out=out6,address=address[0..5]);
    RAM64(in=in,load=ram7Andload,out=out7,address=address[0..5]);
    DMux8Way(in=true,sel=address[6..8],a=ram0,b=ram1,c=ram2,d=ram3,e=ram4,f=ram5,g=ram6,h=ram7);
    And(a=ram0,b=load,out=ram0Andload);
    And(a=ram1,b=load,out=ram1Andload);
    And(a=ram2,b=load,out=ram2Andload);
    And(a=ram3,b=load,out=ram3Andload);
    And(a=ram4,b=load,out=ram4Andload);
    And(a=ram5,b=load,out=ram5Andload);
    And(a=ram6,b=load,out=ram6Andload);
    And(a=ram7,b=load,out=ram7Andload);
    Mux8Way16(a=out0,b=out1,c=out2,d=out3,e=out4,f=out5,g=out6,h=out7,sel=address[6..8],out=out);
}

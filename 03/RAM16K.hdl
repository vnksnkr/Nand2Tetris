// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    RAM4K(in=in,load=ram0Andload,out=out0,address=address[0..11]);
    RAM4K(in=in,load=ram1Andload,out=out1,address=address[0..11]);
    RAM4K(in=in,load=ram2Andload,out=out2,address=address[0..11]);
    RAM4K(in=in,load=ram3Andload,out=out3,address=address[0..11]);
    DMux4Way(in=true,sel=address[12..13],a=ram0,b=ram1,c=ram2,d=ram3);
    And(a=ram0,b=load,out=ram0Andload);
    And(a=ram1,b=load,out=ram1Andload);
    And(a=ram2,b=load,out=ram2Andload);
    And(a=ram3,b=load,out=ram3Andload);
    Mux4Way16(a=out0,b=out1,c=out2,d=out3,sel=address[12..13],out=out);
}
